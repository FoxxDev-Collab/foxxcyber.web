This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.dockerignore
.env.production
.env.production.example
.eslintrc.json
.gitignore
app/about/page.tsx
app/api/contact/example.txt
app/api/contact/route.ts
app/atoaas/page.tsx
app/contact/form.tsx
app/contact/page.tsx
app/globals.css
app/layout.tsx
app/page.tsx
app/risk_assessment/advanced.tsx
app/risk_assessment/basic.tsx
app/risk_assessment/page.tsx
app/services/page.tsx
app/vciso/page.tsx
components.json
components/shared/Header.tsx
components/shared/theme-provider.tsx
components/shared/theme-toggle.tsx
components/ui/button.tsx
components/ui/card.tsx
lib/logger.ts
lib/rate-limit.ts
lib/utils.ts
next.config.mjs
package.json
postcss.config.mjs
README.md
tailwind.config.ts
tsconfig.json
types/next-themes.d.ts

================================================================
Files
================================================================

================
File: .dockerignore
================
node_modules
.next
.git
.env
.env.*
npm-debug.log*
yarn-debug.log*
yarn-error.log*
README.md
.gitignore
.eslintrc.json
.dockerignore
Dockerfile
docker-compose.yml

================
File: .env.production
================
# Production Environment Variables
TWENTY_CRM_URL="http://localhost:3000"
TWENTY_API_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjZDIzM2Q3YS1jZjVjLTRmZGYtYTcyMC0zMjMxMGJmMGIyYTkiLCJ0eXBlIjoiQVBJX0tFWSIsIndvcmtzcGFjZUlkIjoiY2QyMzNkN2EtY2Y1Yy00ZmRmLWE3MjAtMzIzMTBiZjBiMmE5IiwiaWF0IjoxNzM4MzQyMDA3LCJleHAiOjQ4OTE5NDIwMDYsImp0aSI6IjA3NTBiYjAzLWNlOWItNGI4MS1hYTlhLWVjNTVmZmZlYTQ4YiJ9.rSFbxxtWVaQQQokbKKjGjUgWrlNVzm9cZnJKYwDscZU"

# Node Environment
NODE_ENV=production

# Redis Configuration
REDIS_URL=redis://redis:6379

================
File: .env.production.example
================
# Next.js Production Environment Variables
# Copy this file to .env.production and fill in the values

# Twenty CRM Configuration
TWENTY_CRM_URL=your_twenty_crm_url_here
TWENTY_API_KEY=your_twenty_api_key_here

# Node Environment
NODE_ENV=production

# Redis Configuration (pre-configured in docker-compose)
REDIS_URL=redis://redis:6379

================
File: .eslintrc.json
================
{
  "extends": ["next/core-web-vitals", "next/typescript"]
}

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: app/about/page.tsx
================
import React from 'react';
import { Shield, Users, Award, Globe } from 'lucide-react';
import { Card, CardContent } from "@/components/ui/card";

export default function AboutPage() {
    return (
        <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white dark:from-slate-950 dark:to-slate-900">
          {/* Hero Section */}
          <section className="relative py-20 overflow-hidden">
            <div className="container mx-auto px-4">
              <div className="flex flex-col md:flex-row items-center justify-between gap-12">
                <div className="flex flex-col text-left md:w-1/2">
                  <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-gray-50 mb-6">
                    Securing Your Digital Future
                  </h1>
                  <p className="text-xl text-gray-600 dark:text-gray-300">
                    At Foxx Cyber, we combine expertise, innovation, and dedication to protect 
                    your business in an ever-evolving digital landscape.
                  </p>
                </div>
                
                {/* Custom Globe SVG */}
                <div className="md:w-1/2 flex justify-center">
                  <svg className="w-full max-w-lg h-auto" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
                    {/* Background Circle */}
                    <circle cx="400" cy="300" r="250" className="fill-primary/10 dark:fill-primary/20"/>
                    
                    {/* Grid Lines */}
                    <g className="stroke-primary/30 dark:stroke-primary/40" strokeWidth="1">
                      {/* Latitude Lines */}
                      <path d="M150 300 Q400 200 650 300" fill="none"/>
                      <path d="M150 250 Q400 150 650 250" fill="none"/>
                      <path d="M150 350 Q400 250 650 350" fill="none"/>
                      <path d="M150 200 Q400 100 650 200" fill="none"/>
                      <path d="M150 400 Q400 300 650 400" fill="none"/>
                      
                      {/* Longitude Lines */}
                      <path d="M400 50 Q400 300 400 550" fill="none"/>
                      <path d="M300 50 Q300 300 300 550" fill="none"/>
                      <path d="M500 50 Q500 300 500 550" fill="none"/>
                      <path d="M200 100 Q200 300 200 500" fill="none"/>
                      <path d="M600 100 Q600 300 600 500" fill="none"/>
                    </g>
                    
                    {/* Connection Points */}
                    <g className="fill-primary dark:fill-primary/80">
                      <circle cx="350" cy="250" r="4"/>
                      <circle cx="450" cy="350" r="4"/>
                      <circle cx="250" cy="350" r="4"/>
                      <circle cx="550" cy="250" r="4"/>
                      <circle cx="400" cy="200" r="4"/>
                    </g>
                    
                    {/* Connection Lines */}
                    <g className="stroke-primary dark:stroke-primary/80" strokeWidth="2">
                      <line x1="350" y1="250" x2="450" y2="350"/>
                      <line x1="450" y1="350" x2="250" y2="350"/>
                      <line x1="250" y1="350" x2="550" y2="250"/>
                      <line x1="550" y1="250" x2="400" y2="200"/>
                    </g>
                  </svg>
                </div>
              </div>
            </div>
          </section>
    
          {/* Core Values */}
          <section className="py-16">
            <div className="container mx-auto px-4">
              <h2 className="text-3xl font-bold text-center mb-12 dark:text-gray-50">Our Core Values</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
                  <CardContent className="pt-6">
                    <Shield className="w-12 h-12 text-primary mb-4" />
                    <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Expert Protection</h3>
                    <p className="text-gray-600 dark:text-gray-300">Delivering top-tier cybersecurity solutions with industry-leading expertise.</p>
                  </CardContent>
                </Card>
                <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
                  <CardContent className="pt-6">
                    <Users className="w-12 h-12 text-primary mb-4" />
                    <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Client-Centric</h3>
                    <p className="text-gray-600 dark:text-gray-300">Tailoring our services to meet your unique security needs and goals.</p>
                  </CardContent>
                </Card>
                <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
                  <CardContent className="pt-6">
                    <Award className="w-12 h-12 text-primary mb-4" />
                    <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Certified Expertise</h3>
                    <p className="text-gray-600 dark:text-gray-300">Our team holds leading industry certifications including CISM and Security+.</p>
                  </CardContent>
                </Card>
                <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
                  <CardContent className="pt-6">
                    <Globe className="w-12 h-12 text-primary mb-4" />
                    <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Global Protection</h3>
                    <p className="text-gray-600 dark:text-gray-300">Securing businesses worldwide with comprehensive cybersecurity solutions.</p>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>
    
          {/* Professional Journey */}
          <section className="py-16 bg-white/80 dark:bg-slate-800/80">
            <div className="container mx-auto px-4">
              <div className="max-w-3xl mx-auto">
                <h2 className="text-3xl font-bold mb-8 text-center dark:text-gray-50">Our Professional Journey</h2>
                <div className="space-y-8">
                  <div className="relative pl-8 border-l-2 border-primary/20 dark:border-primary/40">
                    <div className="absolute w-4 h-4 bg-primary rounded-full -left-[9px] top-1 dark:bg-primary/80"></div>
                    <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Foundation in IT Security</h3>
                    <p className="text-gray-600 dark:text-gray-300">Starting with a strong foundation in IT and Security+ certification, 
                    our team brings fundamental security expertise to every project.</p>
                  </div>
                  <div className="relative pl-8 border-l-2 border-primary/20 dark:border-primary/40">
                    <div className="absolute w-4 h-4 bg-primary rounded-full -left-[9px] top-1 dark:bg-primary/80"></div>
                    <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Advanced Certifications</h3>
                    <p className="text-gray-600 dark:text-gray-300">Achieving CISM certification through ISACA demonstrates our 
                    commitment to mastering information security management.</p>
                  </div>
                  <div className="relative pl-8 border-l-2 border-primary/20 dark:border-primary/40">
                    <div className="absolute w-4 h-4 bg-primary rounded-full -left-[9px] top-1 dark:bg-primary/80"></div>
                    <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Continuous Growth</h3>
                    <p className="text-gray-600 dark:text-gray-300">We continuously pursue advanced certifications and stay 
                    updated with the latest in cybersecurity to better serve our clients.</p>
                  </div>
                </div>
              </div>
            </div>
          </section>
        </div>
      );
    }

================
File: app/api/contact/example.txt
================
const request = require('request');

const options = {
  method: 'POST',
  url: 'http://localhost:3000/rest/people',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjZDIzM2Q3YS1jZjVjLTRmZGYtYTcyMC0zMjMxMGJmMGIyYTkiLCJ0eXBlIjoiQVBJX0tFWSIsIndvcmtzcGFjZUlkIjoiY2QyMzNkN2EtY2Y1Yy00ZmRmLWE3MjAtMzIzMTBiZjBiMmE5IiwiaWF0IjoxNzM4MzQyMDA3LCJleHAiOjQ4OTE5NDIwMDYsImp0aSI6IjA3NTBiYjAzLWNlOWItNGI4MS1hYTlhLWVjNTVmZmZlYTQ4YiJ9.rSFbxxtWVaQQQokbKKjGjUgWrlNVzm9cZnJKYwDscZU'
  },
  body: {
    name: {firstName: 'string', lastName: 'string'},
    emails: {primaryEmail: 'string', additionalEmails: ['user@example.com']},
    linkedinLink: {
      primaryLinkLabel: 'string',
      primaryLinkUrl: 'string',
      secondaryLinks: [{url: 'http://example.com', label: 'string'}]
    },
    xLink: {
      primaryLinkLabel: 'string',
      primaryLinkUrl: 'string',
      secondaryLinks: [{url: 'http://example.com', label: 'string'}]
    },
    jobTitle: 'string',
    phones: {
      additionalPhones: ['string'],
      primaryPhoneCountryCode: 'string',
      primaryPhoneCallingCode: 'string',
      primaryPhoneNumber: 'string'
    },
    city: 'string',
    avatarUrl: 'string',
    position: 0,
    createdBy: {source: 'EMAIL'},
    companyId: '8bb73d03-06b4-47c7-80c7-59301f770eda'
  },
  json: true
};

request(options, function (error, response, body) {
  if (error) throw new Error(error);

  console.log(body);
});

================
File: app/api/contact/route.ts
================
// /app/api/contact/route.ts
import { NextResponse } from 'next/server';
import { z } from 'zod'; // For validation
import { rateLimit } from '@/lib/rate-limit'; // You'll need to implement this
import { logger } from '@/lib/logger'; // You'll need to implement this

// Helper to transform empty strings to undefined
const emptyStringToUndefined = z.string().transform(str => str === '' ? undefined : str);

// Validation schema
const PersonSchema = z.object({
    name: z.object({
      firstName: z.string().min(1),
      lastName: z.string().min(1)
    }),
    emails: z.object({
      primaryEmail: z.string().email(),
      additionalEmails: z.array(z.string().email()).optional()
    }),
    jobTitle: z.string(),
    phones: z.object({
      primaryPhoneNumber: emptyStringToUndefined.optional(),
      primaryPhoneCountryCode: emptyStringToUndefined.optional(),
      primaryPhoneCallingCode: emptyStringToUndefined.optional(),
      additionalPhones: z.array(z.string()).optional()
    }).optional(),
    city: emptyStringToUndefined.optional(),
    linkedinLink: z.object({
      primaryLinkUrl: emptyStringToUndefined
        .pipe(z.string().url().optional())
        .optional(),
      primaryLinkLabel: emptyStringToUndefined.optional()
    })
    .optional()
    .transform(val => {
      // Remove linkedinLink entirely if both fields are undefined or empty
      if (!val?.primaryLinkUrl && !val?.primaryLinkLabel) {
        return undefined;
      }
      return val;
    })
  });

export async function POST(request: Request) {
  try {
    // 1. Rate limiting
    const identifier = request.headers.get('x-forwarded-for') || 'anonymous';
    const rateLimitResult = await rateLimit(identifier);
    
    if (!rateLimitResult.success) {
      return NextResponse.json(
        { error: 'Too many requests' },
        { status: 429 }
      );
    }

    // 2. Get and validate the form data
    const formData = await request.json();
    const validationResult = PersonSchema.safeParse(formData);

    if (!validationResult.success) {
      logger.warn('Validation failed', {
        errors: validationResult.error.errors,
        data: formData
      });
      
      return NextResponse.json(
        { error: 'Invalid form data', details: validationResult.error.errors },
        { status: 400 }
      );
    }

    // Clean up the validated data by removing undefined fields
    const cleanData = Object.fromEntries(
      Object.entries(validationResult.data).filter(([, value]) => value !== undefined)
    );

    // 3. Make request to Twenty CRM
    const crmResponse = await fetch(`${process.env.TWENTY_CRM_URL}/rest/people`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.TWENTY_API_KEY}`,
      },
      body: JSON.stringify({
        ...cleanData,
        createdBy: { source: 'API' },
        position: 0
      })
    });

    // 4. Handle CRM response
    if (!crmResponse.ok) {
      const error = await crmResponse.text();
      logger.error('CRM Error', {
        status: crmResponse.status,
        error,
        data: validationResult.data
      });

      return NextResponse.json(
        { error: 'Failed to create contact in CRM' },
        { status: 502 }
      );
    }

    // 5. Log success and return
    logger.info('Contact created successfully', {
      email: validationResult.data.emails.primaryEmail
    });

    return NextResponse.json({
      success: true,
      message: 'Contact created successfully'
    });

  } catch (error) {
    // 6. Handle unexpected errors
    logger.error('Unexpected error', { error });
    
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}

================
File: app/atoaas/page.tsx
================
import React from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import Link from "next/link";
import { Shield, FileCheck, Cloud, Server, Network, CheckCircle, ArrowRight } from 'lucide-react';

export default function ATOaaSPage() {
  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white dark:from-slate-950 dark:to-slate-900">
      {/* Hero Section */}
      <section className="relative py-20 overflow-hidden">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row items-center justify-between gap-12">
            <div className="flex flex-col text-left md:w-1/2">
              <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-gray-50 mb-6">
                ATO as a Service
              </h1>
              <p className="text-xl text-gray-600 dark:text-gray-300">
                Comprehensive system security and compliance for your mission-critical applications, wether they be on the cloud, on-premises, or a mix of both. Foxx Cyber 
                professionals have experience in securiting systems within the federal government and can help you achieve your ATO.
              </p>
            </div>
            
            {/* Custom Shield SVG - keeping the existing one as it works well */}
            <div className="md:w-1/2 flex justify-center">
              <svg className="w-full max-w-lg h-auto" viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg">
                <path d="M200 50 L350 100 L350 200 Q350 300 200 350 Q50 300 50 200 L50 100 Z" 
                  className="fill-primary/10 dark:fill-primary/20"/>
                <g className="stroke-primary/30 dark:stroke-primary/40" strokeWidth="2" fill="none">
                  <path d="M100 150 L300 150" />
                  <path d="M150 200 L250 200" />
                  <path d="M120 250 L280 250" />
                  <path d="M200 150 L200 250" />
                  <path d="M150 150 L150 200" />
                  <path d="M250 150 L250 200" />
                </g>
                <g className="fill-primary dark:fill-primary/80">
                  <circle cx="150" cy="150" r="4" />
                  <circle cx="200" cy="150" r="4" />
                  <circle cx="250" cy="150" r="4" />
                  <circle cx="150" cy="200" r="4" />
                  <circle cx="200" cy="200" r="4" />
                  <circle cx="250" cy="200" r="4" />
                  <circle cx="200" cy="250" r="4" />
                </g>
              </svg>
            </div>
          </div>
        </div>
      </section>

      {/* What is ATO & System Security */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <div className="grid gap-8 md:grid-cols-2 max-w-4xl mx-auto">
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="p-6 space-y-4">
                <div className="flex items-center gap-4">
                  <Shield className="w-8 h-8 text-primary" />
                  <h2 className="text-2xl font-semibold">System-Level Security</h2>
                </div>
                <p className="text-gray-600 dark:text-gray-300">
                  Our ATO service provides comprehensive security coverage for your entire system - from infrastructure 
                  components like VMs and firewalls to application code and third-party integrations. We ensure every 
                  aspect of your system meets rigorous security standards.
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="p-6 space-y-4">
                <div className="flex items-center gap-4">
                  <FileCheck className="w-8 h-8 text-primary" />
                  <h2 className="text-2xl font-semibold">Compliance Coverage</h2>
                </div>
                <p className="text-gray-600 dark:text-gray-300">
                  Whether you need FedRAMP, NIST, or CMMC compliance, our team guides you through the entire process - 
                  from initial system categorization to continuous monitoring, ensuring your ATO package meets all 
                  regulatory requirements.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* System Types & Pricing */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-semibold text-center mb-12">System-Specific ATO Packages</h2>
          <div className="grid gap-8 md:grid-cols-3 max-w-6xl mx-auto">
            {/* Cloud Systems */}
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all">
              <CardHeader>
                <div className="flex items-center gap-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Cloud className="h-8 w-8 text-primary" />
                  </div>
                  <div>
                    <CardTitle>Cloud Systems</CardTitle>
                    <p className="text-sm text-gray-500">4-6 Month Timeline</p>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="mb-6">
                  <p className="text-3xl font-bold">$75,000+</p>
                </div>
                <ul className="space-y-3 text-gray-600 dark:text-gray-300">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Cloud-native applications
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    SaaS platforms
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Cloud security architecture review
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    CSP compliance mapping
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Container security assessment
                  </li>
                </ul>
              </CardContent>
            </Card>

            {/* On-Premises Systems */}
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all">
              <CardHeader>
                <div className="flex items-center gap-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Server className="h-8 w-8 text-primary" />
                  </div>
                  <div>
                    <CardTitle>On-Premises</CardTitle>
                    <p className="text-sm text-gray-500">6-8 Month Timeline</p>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="mb-6">
                  <p className="text-3xl font-bold">$100,000+</p>
                </div>
                <ul className="space-y-3 text-gray-600 dark:text-gray-300">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Data center systems
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Legacy applications
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Physical security assessment
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Network security review
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    System hardening
                  </li>
                </ul>
              </CardContent>
            </Card>

            {/* Hybrid Systems */}
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all">
              <CardHeader>
                <div className="flex items-center gap-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Network className="h-8 w-8 text-primary" />
                  </div>
                  <div>
                    <CardTitle>Hybrid Systems</CardTitle>
                    <p className="text-sm text-gray-500">8-12 Month Timeline</p>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="mb-6">
                  <p className="text-3xl font-bold">$150,000+</p>
                </div>
                <ul className="space-y-3 text-gray-600 dark:text-gray-300">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Mixed infrastructure
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Complex integrations
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Boundary analysis
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Multi-environment controls
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Cross-platform security
                  </li>
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Process Steps - keeping but updated content */}
      <section className="py-16 relative">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-semibold text-center mb-12">Our ATO Process</h2>
          <div className="grid gap-6 md:grid-cols-3 max-w-4xl mx-auto relative">
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-transform">
              <CardContent className="p-6 space-y-4">
                <div className="w-12 h-12 bg-primary/10 dark:bg-primary/20 rounded-full flex items-center justify-center mb-4">
                  <span className="text-primary font-bold text-xl">1</span>
                </div>
                <h3 className="text-xl font-semibold">System Analysis</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Complete system inventory and architecture review, security categorization, and control selection based on 
                  system type and compliance requirements.
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-transform">
              <CardContent className="p-6 space-y-4">
                <div className="w-12 h-12 bg-primary/10 dark:bg-primary/20 rounded-full flex items-center justify-center mb-4">
                  <span className="text-primary font-bold text-xl">2</span>
                </div>
                <h3 className="text-xl font-semibold">Implementation</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Security control implementation, documentation development including SSP, and creation of all required 
                  artifacts and evidence.
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-transform">
              <CardContent className="p-6 space-y-4">
                <div className="w-12 h-12 bg-primary/10 dark:bg-primary/20 rounded-full flex items-center justify-center mb-4">
                  <span className="text-primary font-bold text-xl">3</span>
                </div>
                <h3 className="text-xl font-semibold">Authorization</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Assessment coordination, POA&M development, package submission, and transition to continuous monitoring 
                  after authorization.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-slate-900/50 dark:to-slate-800/50">
        <div className="container mx-auto px-4">
          <div className="text-center space-y-6 max-w-2xl mx-auto">
            <h2 className="text-3xl font-semibold dark:text-gray-50">Ready to Secure Your System?</h2>
            <p className="text-lg text-gray-600 dark:text-gray-300">
              Contact us today to discuss your system&apos;s security requirements and start your ATO journey
            </p>
            <Button asChild size="lg" className="group">
              <Link href="/contact" className="flex items-center">
                Schedule a Consultation
                <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
              </Link>
            </Button>
          </div>
        </div>
      </section>

      {/* FAQs */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-semibold text-center mb-12 dark:text-gray-50">Frequently Asked Questions</h2>
          <div className="space-y-4 max-w-4xl mx-auto">
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="p-6 space-y-2">
                <h3 className="text-xl font-semibold">What exactly constitutes a &quot;system&quot; for ATO purposes?</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  A system encompasses all components needed to deliver your service or application - including infrastructure 
                  (VMs, networks, firewalls), software components, databases, and third-party integrations. Our ATO package 
                  covers everything within your system boundary that needs to be secured and documented.
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="p-6 space-y-2">
                <h3 className="text-xl font-semibold">How do you handle system changes during the ATO process?</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  We implement change management procedures from the start. While major system changes during the ATO process 
                  should be minimized, our approach includes flexibility for necessary updates and proper documentation of 
                  all changes to maintain compliance alignment.
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="p-6 space-y-2">
                <h3 className="text-xl font-semibold">What happens after we receive our ATO?</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  We transition into continuous monitoring mode, helping you maintain your security posture and ATO status. 
                  This includes regular control assessments, continuous monitoring implementation, security metric tracking, 
                  and support for system updates or changes that could impact your authorization status.
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="p-6 space-y-2">
                <h3 className="text-xl font-semibold">What determines the final pricing for an ATO package?</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Pricing is based on system complexity factors including number of interfaces/integrations, data sensitivity 
                  levels, user base size, technical architecture complexity, and specific compliance requirements. We provide 
                  detailed pricing after initial system assessment.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>
      </div>
    );
  }

================
File: app/contact/form.tsx
================
'use client';
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Mail, Building2, User, Phone, Linkedin } from 'lucide-react';

const ContactForm = () => {
  const [formData, setFormData] = useState({
    name: {
      firstName: '',
      lastName: ''
    },
    emails: {
      primaryEmail: '',
      additionalEmails: []
    },
    linkedinLink: {
      primaryLinkLabel: '',
      primaryLinkUrl: ''
    },
    jobTitle: '',
    phones: {
      primaryPhoneNumber: '',
      primaryPhoneCountryCode: 'US', // Default
      primaryPhoneCallingCode: '1',  // Default US code
      additionalPhones: []
    },
    city: '',
    companyId: '', // This would be set on the backend
    position: 0
  });

  const [submitting, setSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState({
    success: false,
    error: false,
    message: ''
  });

  type FormData = {
    name: {
      firstName: string;
      lastName: string;
    };
    emails: {
      primaryEmail: string;
      additionalEmails: string[];
    };
    linkedinLink: {
      primaryLinkLabel: string;
      primaryLinkUrl: string;
    };
    jobTitle: string;
    phones: {
      primaryPhoneNumber: string;
      primaryPhoneCountryCode: string;
      primaryPhoneCallingCode: string;
      additionalPhones: string[];
    };
    city: string;
    companyId: string;
    position: number;
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    
    // Handle nested objects
    if (name.includes('.')) {
      const [parent, child] = name.split('.') as [keyof FormData, string];
      setFormData(prev => ({
        ...prev,
        [parent]: {
          ...(typeof prev[parent] === 'object' ? prev[parent] : {}),
          [child]: value
        }
      }));
    } else {
      setFormData(prev => ({
        ...prev,
        [name as keyof FormData]: value
      }));
    }
  };

const handleSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {
    e.preventDefault();
    setSubmitting(true);
    
    try {
        const response: Response = await fetch('/api/contact', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData),
        });

        if (!response.ok) throw new Error('Submission failed');

        setSubmitStatus({
            success: true,
            error: false,
            message: 'Thank you for your interest. We will contact you soon!'
        });
        
        // Reset form
        setFormData({
            name: { firstName: '', lastName: '' },
            emails: { primaryEmail: '', additionalEmails: [] },
            linkedinLink: { primaryLinkLabel: '', primaryLinkUrl: '' },
            jobTitle: '',
            phones: {
                primaryPhoneNumber: '',
                primaryPhoneCountryCode: 'US',
                primaryPhoneCallingCode: '1',
                additionalPhones: []
            },
            city: '',
            companyId: '',
            position: 0
        });

    } catch {
        setSubmitStatus({
            success: false,
            error: true,
            message: 'There was an error submitting your request. Please try again.'
        });
    } finally {
        setSubmitting(false);
    }
};

  return (
    <Card className="max-w-2xl mx-auto bg-white/50 dark:bg-slate-800/50 backdrop-blur">
      <CardHeader>
        <CardTitle className="text-2xl font-bold text-center">Contact Us</CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <label className="text-sm font-medium flex items-center gap-2">
                <User className="w-4 h-4" />
                First Name *
              </label>
              <input
                type="text"
                name="name.firstName"
                value={formData.name.firstName}
                onChange={handleInputChange}
                required
                className="w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-primary"
              />
            </div>
            <div className="space-y-2">
              <label className="text-sm font-medium flex items-center gap-2">
                <User className="w-4 h-4" />
                Last Name *
              </label>
              <input
                type="text"
                name="name.lastName"
                value={formData.name.lastName}
                onChange={handleInputChange}
                required
                className="w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-primary"
              />
            </div>
          </div>

          <div className="space-y-2">
            <label className="text-sm font-medium flex items-center gap-2">
              <Mail className="w-4 h-4" />
              Email *
            </label>
            <input
              type="email"
              name="emails.primaryEmail"
              value={formData.emails.primaryEmail}
              onChange={handleInputChange}
              required
              className="w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-primary"
            />
          </div>

          <div className="space-y-2">
            <label className="text-sm font-medium flex items-center gap-2">
              <Building2 className="w-4 h-4" />
              Job Title *
            </label>
            <input
              type="text"
              name="jobTitle"
              value={formData.jobTitle}
              onChange={handleInputChange}
              required
              className="w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-primary"
            />
          </div>

          <div className="space-y-2">
            <label className="text-sm font-medium flex items-center gap-2">
              <Phone className="w-4 h-4" />
              Phone Number
            </label>
            <input
              type="tel"
              name="phones.primaryPhoneNumber"
              value={formData.phones.primaryPhoneNumber}
              onChange={handleInputChange}
              className="w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-primary"
            />
          </div>

          <div className="space-y-2">
            <label className="text-sm font-medium flex items-center gap-2">
              <Building2 className="w-4 h-4" />
              City
            </label>
            <input
              type="text"
              name="city"
              value={formData.city}
              onChange={handleInputChange}
              className="w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-primary"
            />
          </div>

          <div className="space-y-2">
            <label className="text-sm font-medium flex items-center gap-2">
              <Linkedin className="w-4 h-4" />
              LinkedIn URL
            </label>
            <input
              type="url"
              name="linkedinLink.primaryLinkUrl"
              value={formData.linkedinLink.primaryLinkUrl}
              onChange={handleInputChange}
              placeholder="https://www.linkedin.com/in/..."
              className="w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-primary"
            />
          </div>

          {submitStatus.message && (
            <div className={`p-4 rounded ${
              submitStatus.success ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'
            }`}>
              {submitStatus.message}
            </div>
          )}

<button
  type="submit"
  disabled={submitting}
  className="w-full bg-primary text-white dark:bg-white dark:text-black py-2 px-4 rounded hover:bg-primary/90 dark:hover:bg-white/90 disabled:opacity-50 disabled:cursor-not-allowed"
>
  {submitting ? 'Submitting...' : 'Submit'}
</button>
        </form>
      </CardContent>
    </Card>
  );
};

export default ContactForm;

================
File: app/contact/page.tsx
================
import Form  from "@/app/contact/form"; // Adjust import path as needed

export default function ContactPage() {
  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white dark:from-slate-950 dark:to-slate-900">
      <div className="container mx-auto px-4 py-20">
        <div className="max-w-2xl mx-auto">
          <h1 className="text-4xl font-bold text-center mb-12 text-gray-900 dark:text-gray-50">
            Contact Us
          </h1>
          
          <Form />
        </div>
      </div>
    </div>
  );
}

================
File: app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 224 71.4% 4.1%;
    --card: 0 0% 100%;
    --card-foreground: 224 71.4% 4.1%;
    --popover: 0 0% 100%;
    --popover-foreground: 224 71.4% 4.1%;
    --primary: 220.9 39.3% 11%;
    --primary-foreground: 210 20% 98%;
    --secondary: 220 14.3% 95.9%;
    --secondary-foreground: 220.9 39.3% 11%;
    --muted: 220 14.3% 95.9%;
    --muted-foreground: 220 8.9% 46.1%;
    --accent: 220 14.3% 95.9%;
    --accent-foreground: 220.9 39.3% 11%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 20% 98%;
    --border: 220 13% 91%;
    --input: 220 13% 91%;
    --ring: 224 71.4% 4.1%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 224 71.4% 4.1%;
    --foreground: 210 20% 98%;
    --card: 224 71.4% 4.1%;
    --card-foreground: 210 20% 98%;
    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 20% 98%;
    --primary: 210 20% 98%;
    --primary-foreground: 220.9 39.3% 11%;
    --secondary: 215 27.9% 16.9%;
    --secondary-foreground: 210 20% 98%;
    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.9 10.6% 64.9%;
    --accent: 215 27.9% 16.9%;
    --accent-foreground: 210 20% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 20% 98%;
    --border: 215 27.9% 16.9%;
    --input: 215 27.9% 16.9%;
    --ring: 216 12.2% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Print styles */
@media print {
  /* Hide everything except the assessment card */
  body > *:not(.assessment-container) {
    display: none !important;
  }

  /* Show the assessment card and its contents */
  .assessment-container {
    display: block !important;
    position: relative !important;
    width: 100% !important;
    max-width: none !important;
    margin: 0 !important;
    padding: 0 !important;
  }

  /* Reset card styles for print */
  .card {
    background: white !important;
    color: black !important;
    border: none !important;
    box-shadow: none !important;
    margin: 0 !important;
    padding: 0 !important;
    width: 100% !important;
    max-width: none !important;
  }

  /* Add page margins */
  @page {
    margin: 2cm;
    size: portrait;
  }

  /* Hide non-essential elements */
  .no-print {
    display: none !important;
  }

  /* Style the header */
  .card-header {
    border-bottom: 2px solid #000;
    padding-bottom: 1cm;
    margin-bottom: 1cm;
  }

  /* Style the content */
  .card-content {
    margin-top: 1cm;
  }

  /* Style recommendations */
  div[class*="bg-blue-50"],
  div[class*="bg-blue-900"] {
    background: white !important;
    border: 1px solid #ccc !important;
    break-inside: avoid;
    margin: 0.5cm 0;
    padding: 0.5cm !important;
  }

  /* Style category headers */
  p[class*="text-blue-700"],
  p[class*="text-blue-300"] {
    color: black !important;
    font-weight: bold;
  }

  /* Add page numbers */
  @page {
    @bottom-right {
      content: "Page " counter(page) " of " counter(pages);
    }
  }

  /* Ensure text contrast */
  p, h1, h2, h3, h4, h5, h6 {
    color: black !important;
  }

  /* Format the security score */
  div[class*="text-4xl"] {
    font-size: 48px !important;
    color: black !important;
    text-align: center;
    margin: 1cm 0;
  }

  /* Add company branding */
  .card-header::before {
    content: "FoxxCyber Security Assessment";
    display: block;
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 0.5cm;
  }

  /* Add date */
  .card-content::after {
    content: "Assessment Date: " attr(data-date);
    display: block;
    text-align: center;
    margin-top: 2cm;
    font-size: 12px;
    color: #666;
  }
}

================
File: app/layout.tsx
================
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Header } from "@/components/shared/Header";
import { ThemeProvider } from "@/components/shared/theme-provider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Foxx Cyber - Cybersecurity Solutions",
  description: "Professional cybersecurity services and solutions",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen flex flex-col`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <Header />
          <main className="flex-1">
            {children}
          </main>
        </ThemeProvider>
      </body>
    </html>
  );
}

================
File: app/page.tsx
================
import { Button } from "@/components/ui/button"
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card"
import { Shield, Clock, CheckCircle, ArrowRight, Lock, FileCheck, Users } from "lucide-react"
import Link from "next/link"

// Custom Hero SVG Background with dark mode support
const HeroBackground = () => (
  <svg className="absolute top-0 right-0 w-1/2 h-auto text-primary/5 dark:text-white/5" viewBox="0 0 800 600">
    {/* Shield Base */}
    <path 
      d="M400 50 L700 150 L700 400 Q400 600 100 400 L100 150 Z" 
      className="fill-current opacity-20"
    />
    
    {/* Circuit Board Pattern */}
    <g className="stroke-current" fill="none" strokeWidth="2">
      <path d="M300 200 H500 M400 200 V400" opacity="0.3" />
      <path d="M250 300 H550 M400 300 V350" opacity="0.3" />
      <path d="M200 400 H600" opacity="0.3" strokeDasharray="8 4" />
    </g>
    
    {/* Connection Points */}
    <g className="fill-current">
      <circle cx="400" cy="200" r="6" opacity="0.5" />
      <circle cx="400" cy="300" r="6" opacity="0.5" />
      <circle cx="400" cy="400" r="6" opacity="0.5" />
      <circle cx="300" cy="300" r="6" opacity="0.5" />
      <circle cx="500" cy="300" r="6" opacity="0.5" />
    </g>
  </svg>
);

export default function HomePage() {
  return (
    <div className="relative min-h-screen bg-gradient-to-b from-blue-50 to-white dark:from-slate-950 dark:to-slate-900 overflow-hidden">
      <HeroBackground />
      
      {/* Hero Section */}
      <section className="relative pt-24 pb-20">
        <div className="container px-4 max-w-7xl mx-auto">
          <div className="grid md:grid-cols-2 gap-12 items-center">
            <div className="space-y-8">
              <h1 className="text-5xl md:text-6xl lg:text-7xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary to-primary/80 dark:from-primary dark:to-primary/60">
                Fortify Your Business Against Cyber Threats
              </h1>
              <p className="text-xl text-muted-foreground">
                At Foxx Cyber, we specialize in providing top-notch cyber security consulting 
                services to businesses like yours. Our team of experts understands the importance 
                of protecting your organization&apos;s sensitive data and reputation.
              </p>
              <div className="flex gap-4">
                <Button size="lg" className="group" asChild>
                  <Link href="/contact" className="flex items-center">
                    Get Started
                    <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                  </Link>
                </Button>
                <Button size="lg" variant="outline" asChild>
                  <Link href="/services">Our Services</Link>
                </Button>
              </div>
            </div>
            
            {/* Stats/Features Grid */}
            <div className="grid grid-cols-2 gap-4">
              <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm hover:bg-white/80 dark:hover:bg-slate-800/80 transition-colors">
                <CardContent className="p-6">
                  <Lock className="h-8 w-8 text-primary mb-4" />
                  <h3 className="font-semibold text-lg mb-2">Security First</h3>
                  <p className="text-muted-foreground">Advanced protection for your critical assets</p>
                </CardContent>
              </Card>
              <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm hover:bg-white/80 dark:hover:bg-slate-800/80 transition-colors">
                <CardContent className="p-6">
                  <FileCheck className="h-8 w-8 text-primary mb-4" />
                  <h3 className="font-semibold text-lg mb-2">Compliance</h3>
                  <p className="text-muted-foreground">Meet industry standards and regulations</p>
                </CardContent>
              </Card>
              <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm hover:bg-white/80 dark:hover:bg-slate-800/80 transition-colors">
                <CardContent className="p-6">
                  <Shield className="h-8 w-8 text-primary mb-4" />
                  <h3 className="font-semibold text-lg mb-2">Expert Team</h3>
                  <p className="text-muted-foreground">Certified security professionals</p>
                </CardContent>
              </Card>
              <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm hover:bg-white/80 dark:hover:bg-slate-800/80 transition-colors">
                <CardContent className="p-6">
                  <Users className="h-8 w-8 text-primary mb-4" />
                  <h3 className="font-semibold text-lg mb-2">24/7 Support</h3>
                  <p className="text-muted-foreground">Round-the-clock security monitoring</p>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </section>

      {/* Key Benefits */}
      <section className="py-20 bg-gradient-to-r from-blue-50/50 to-indigo-50/50 dark:from-slate-900/50 dark:to-slate-800/50">
        <div className="container px-4 max-w-7xl mx-auto">
          <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
            Why Choose Foxx Cyber
          </h2>
          <div className="grid gap-8 md:grid-cols-3 max-w-5xl mx-auto">
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm transform hover:scale-105 transition-all">
              <CardHeader className="text-center">
                <div className="flex justify-center mb-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Shield className="h-8 w-8 text-primary" />
                  </div>
                </div>
                <CardTitle>Expert Guidance</CardTitle>
              </CardHeader>
              <CardContent className="text-center text-muted-foreground">
                Navigate complex compliance requirements with our experienced team of security professionals.
              </CardContent>
            </Card>
            
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm transform hover:scale-105 transition-all">
              <CardHeader className="text-center">
                <div className="flex justify-center mb-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Clock className="h-8 w-8 text-primary" />
                  </div>
                </div>
                <CardTitle>Accelerated Timeline</CardTitle>
              </CardHeader>
              <CardContent className="text-center text-muted-foreground">
                Fast-track your ATO process with our proven methodologies and templates.
              </CardContent>
            </Card>
            
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm transform hover:scale-105 transition-all">
              <CardHeader className="text-center">
                <div className="flex justify-center mb-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <CheckCircle className="h-8 w-8 text-primary" />
                  </div>
                </div>
                <CardTitle>Ongoing Support</CardTitle>
              </CardHeader>
              <CardContent className="text-center text-muted-foreground">
                Maintain compliance with continuous monitoring and support from our team.
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Call to Action */}
      <section className="py-20">
        <div className="container px-4 max-w-7xl mx-auto text-center">
          <div className="max-w-3xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold mb-6">Ready to Secure Your Business?</h2>
            <p className="text-xl text-muted-foreground mb-8">
              Contact us today to discuss your security needs and learn how we can help protect 
              your organization from cyber threats.
            </p>
            <Button size="lg" className="group" asChild>
              <Link href="/contact" className="flex items-center justify-center">
                Schedule a Consultation
                <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
              </Link>
            </Button>
          </div>
        </div>
      </section>
    </div>
  );
}

================
File: app/risk_assessment/advanced.tsx
================
'use client'

import React from 'react'
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Server, Users, Shield, Cloud, Code, Key, FileText } from 'lucide-react'

interface SecurityAspect {
  id: string
  title: string
  description: string
}

interface Category {
  id: string
  title: string
  icon: React.ReactNode
  aspects: SecurityAspect[]
}

const categories: Category[] = [
  {
    id: 'network',
    title: 'Network Security',
    icon: <Server className="w-6 h-6" />,
    aspects: [
      {
        id: 'net-1',
        title: 'IDS/IPS Implementation',
        description: 'Intrusion Detection and Prevention Systems deployment and monitoring'
      },
      {
        id: 'net-2',
        title: 'Network Segmentation',
        description: 'VLAN implementation and network isolation strategies'
      },
      {
        id: 'net-3',
        title: 'VPN Infrastructure',
        description: 'Secure remote access and site-to-site VPN configurations'
      }
    ]
  },
  {
    id: 'cloud',
    title: 'Cloud Security',
    icon: <Cloud className="w-6 h-6" />,
    aspects: [
      {
        id: 'cloud-1',
        title: 'Cloud Configuration Security',
        description: 'Security groups, IAM policies, and resource access controls'
      },
      {
        id: 'cloud-2',
        title: 'Cloud Monitoring & Logging',
        description: 'CloudTrail, CloudWatch, and security event monitoring'
      },
      {
        id: 'cloud-3',
        title: 'Container Security',
        description: 'Docker/Kubernetes security configurations and image scanning'
      }
    ]
  },
  {
    id: 'application',
    title: 'Application Security',
    icon: <Code className="w-6 h-6" />,
    aspects: [
      {
        id: 'app-1',
        title: 'SAST Implementation',
        description: 'Static Application Security Testing in CI/CD pipeline'
      },
      {
        id: 'app-2',
        title: 'DAST Integration',
        description: 'Dynamic Application Security Testing for production systems'
      },
      {
        id: 'app-3',
        title: 'API Security',
        description: 'API authentication, rate limiting, and input validation'
      }
    ]
  },
  {
    id: 'identity',
    title: 'Identity & Access Management',
    icon: <Users className="w-6 h-6" />,
    aspects: [
      {
        id: 'iam-1',
        title: 'Privileged Access Management',
        description: 'PAM solution implementation and monitoring'
      },
      {
        id: 'iam-2',
        title: 'MFA Implementation',
        description: 'Multi-factor authentication coverage and methods'
      },
      {
        id: 'iam-3',
        title: 'Directory Services',
        description: 'Active Directory/LDAP security configurations'
      }
    ]
  },
  {
    id: 'endpoint',
    title: 'Endpoint Security',
    icon: <Shield className="w-6 h-6" />,
    aspects: [
      {
        id: 'end-1',
        title: 'EDR Deployment',
        description: 'Endpoint Detection and Response coverage'
      },
      {
        id: 'end-2',
        title: 'Device Encryption',
        description: 'Full-disk encryption and removable media controls'
      },
      {
        id: 'end-3',
        title: 'Patch Management',
        description: 'Automated patch deployment and compliance monitoring'
      }
    ]
  },
  {
    id: 'crypto',
    title: 'Cryptography & Data Protection',
    icon: <Key className="w-6 h-6" />,
    aspects: [
      {
        id: 'crypto-1',
        title: 'Key Management',
        description: 'HSM usage and key lifecycle management'
      },
      {
        id: 'crypto-2',
        title: 'Data Classification',
        description: 'DLP implementation and data discovery tools'
      },
      {
        id: 'crypto-3',
        title: 'TLS Configuration',
        description: 'Certificate management and cipher suite configurations'
      }
    ]
  },
  {
    id: 'incident',
    title: 'Incident Response',
    icon: <Shield className="w-6 h-6" />,
    aspects: [
      {
        id: 'ir-1',
        title: 'SIEM Implementation',
        description: 'Security Information and Event Management coverage'
      },
      {
        id: 'ir-2',
        title: 'Incident Playbooks',
        description: 'Documented response procedures and automation'
      },
      {
        id: 'ir-3',
        title: 'Forensics Capability',
        description: 'Digital forensics tools and procedures'
      }
    ]
  },
  {
    id: 'compliance',
    title: 'Compliance & Governance',
    icon: <FileText className="w-6 h-6" />,
    aspects: [
      {
        id: 'comp-1',
        title: 'Regulatory Compliance',
        description: 'Compliance monitoring and reporting capabilities'
      },
      {
        id: 'comp-2',
        title: 'Security Frameworks',
        description: 'Implementation of frameworks (NIST, ISO, etc.)'
      },
      {
        id: 'comp-3',
        title: 'Audit Management',
        description: 'Internal/external audit processes and tools'
      }
    ]
  }
]

export default function AdvancedAssessment() {
  const [currentCategory, setCurrentCategory] = React.useState(0)
  const [scores, setScores] = React.useState<{[key: string]: number}>({})
  const [showResults, setShowResults] = React.useState(false)

  const handleScoreChange = (aspectId: string, value: number) => {
    setScores(prev => ({
      ...prev,
      [aspectId]: value
    }))
  }

  const calculateCategoryScore = (categoryId: string): number => {
    const category = categories.find(c => c.id === categoryId)
    if (!category) return 0

    const aspectScores = category.aspects.map(aspect => scores[aspect.id] || 0)
    const total = aspectScores.reduce((sum, score) => sum + score, 0)
    return Math.round((total / (category.aspects.length * 10)) * 100)
  }

  const calculateOverallScore = (): number => {
    const categoryScores = categories.map(category => calculateCategoryScore(category.id))
    return Math.round(categoryScores.reduce((sum, score) => sum + score, 0) / categories.length)
  }

  const handleNext = () => {
    if (currentCategory < categories.length - 1) {
      setCurrentCategory(prev => prev + 1)
    } else {
      setShowResults(true)
    }
  }

  const handleBack = () => {
    setCurrentCategory(prev => Math.max(0, prev - 1))
  }

  const handleReset = () => {
    setScores({})
    setShowResults(false)
    setCurrentCategory(0)
  }

  //const handlePrint = () => {
    //window.print()
  //}

  const isCategoryComplete = (categoryId: string): boolean => {
    const category = categories.find(c => c.id === categoryId)
    return category?.aspects.every(aspect => typeof scores[aspect.id] === 'number') ?? false
  }

  const currentDate = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })

  return (
    <Card className="w-full max-w-4xl mx-auto bg-white/50 dark:bg-slate-800/50 backdrop-blur">
      <CardHeader className="card-header">
        <CardTitle className="text-2xl font-bold text-center">
          Advanced Security Assessment
        </CardTitle>
        <p className="text-center text-gray-600 dark:text-gray-300">
          Rate your security measures in each area from 0 (non-existent) to 10 (excellent)
        </p>
      </CardHeader>
      <CardContent className="card-content" data-date={currentDate}>
        {!showResults ? (
          <div className="space-y-6">
            <div className="flex items-center gap-2 mb-6">
              {categories.map((cat, index) => (
                <div
                  key={cat.id}
                  className={`flex-1 h-2 rounded ${
                    index < currentCategory
                      ? 'bg-green-500'
                      : index === currentCategory
                      ? 'bg-blue-500'
                      : 'bg-gray-200 dark:bg-gray-700'
                  }`}
                />
              ))}
            </div>

            <div className="flex items-center gap-4 mb-6">
              {categories[currentCategory].icon}
              <h3 className="text-xl font-semibold">{categories[currentCategory].title}</h3>
            </div>

            <div className="space-y-8">
              {categories[currentCategory].aspects.map(aspect => (
                <div key={aspect.id} className="space-y-2">
                  <div className="flex justify-between">
                    <div>
                      <h4 className="font-medium">{aspect.title}</h4>
                      <p className="text-sm text-gray-600 dark:text-gray-400">
                        {aspect.description}
                      </p>
                    </div>
                    <span className="font-bold">{scores[aspect.id] || 0}/10</span>
                  </div>
                  <input
                    type="range"
                    min="0"
                    max="10"
                    value={scores[aspect.id] || 0}
                    onChange={(e) => handleScoreChange(aspect.id, parseInt(e.target.value))}
                    className="w-full"
                  />
                </div>
              ))}
            </div>

            <div className="flex justify-between mt-8">
              <Button
                variant="outline"
                onClick={handleBack}
                disabled={currentCategory === 0}
                className="no-print"
              >
                Back
              </Button>
              <Button
                onClick={handleNext}
                disabled={!isCategoryComplete(categories[currentCategory].id)}
                className="no-print"
              >
                {currentCategory === categories.length - 1 ? 'View Results' : 'Next'}
              </Button>
            </div>
          </div>
        ) : (
          <div className="space-y-6">
            <div className="text-center">
              <h3 className="text-2xl font-bold mb-2">Overall Security Score</h3>
              <div className="text-4xl font-bold text-primary mb-4">
                {calculateOverallScore()}%
              </div>
            </div>

            <div className="grid gap-4 md:grid-cols-2">
              {categories.map(category => (
                <Card key={category.id} className="bg-white/50 dark:bg-slate-900/50">
                  <CardContent className="p-4">
                    <div className="flex items-center gap-2 mb-2">
                      {category.icon}
                      <h4 className="font-semibold">{category.title}</h4>
                    </div>
                    <p className="text-2xl font-bold text-primary">
                      {calculateCategoryScore(category.id)}%
                    </p>
                  </CardContent>
                </Card>
              ))}
            </div>

            <div className="flex flex-wrap gap-4 justify-center mt-6 no-print">

              <Button onClick={handleReset} variant="outline">
                Start Over
              </Button>
            </div>

            <div className="mt-8 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg no-print">
              <h3 className="font-semibold mb-2">Next Steps</h3>
              <p className="text-sm text-gray-600 dark:text-gray-400">
                Based on your assessment results, we recommend scheduling a consultation 
                with our security experts to develop a tailored security improvement plan. 
                Our team can help you address the identified gaps and strengthen your 
                overall security posture.
              </p>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  )
}

================
File: app/risk_assessment/basic.tsx
================
'use client'

import React from 'react'
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"

interface Question {
  id: number
  text: string
  impact: string
  category: string
}

interface Recommendation {
  category: string
  recommendation: string
  impact: string
}

const basicQuestions: Question[] = [
  {
    id: 1,
    text: "Do you regularly update your software and systems?",
    impact: "Regular updates help protect against known vulnerabilities",
    category: "System Security"
  },
  {
    id: 2,
    text: "Do you use strong, unique passwords for all accounts?",
    impact: "Strong passwords are your first line of defense",
    category: "Access Control"
  },
  {
    id: 3,
    text: "Do you have antivirus software installed and updated?",
    impact: "Antivirus helps protect against malware",
    category: "System Security"
  },
  {
    id: 4,
    text: "Do you regularly back up your important data?",
    impact: "Backups protect against data loss",
    category: "Data Protection"
  },
  {
    id: 5,
    text: "Do you use two-factor authentication where available?",
    impact: "2FA adds an extra layer of security",
    category: "Access Control"
  },
  {
    id: 6,
    text: "Do you have a firewall enabled on your network?",
    impact: "Firewalls help prevent unauthorized network access",
    category: "Network Security"
  },
  {
    id: 7,
    text: "Do you encrypt sensitive data at rest and in transit?",
    impact: "Encryption protects data from unauthorized access",
    category: "Data Protection"
  },
  {
    id: 8,
    text: "Do you have a process for securely disposing of sensitive data?",
    impact: "Proper data disposal prevents unauthorized access to discarded information",
    category: "Data Protection"
  },
  {
    id: 9,
    text: "Do you provide security awareness training to users?",
    impact: "Training helps prevent social engineering attacks and security incidents",
    category: "Security Awareness"
  },
  {
    id: 10,
    text: "Do you have an incident response plan in place?",
    impact: "A response plan helps minimize damage from security incidents",
    category: "Incident Response"
  },
  {
    id: 11,
    text: "Do you secure mobile devices that access company data?",
    impact: "Mobile device security prevents data breaches through personal devices",
    category: "Mobile Security"
  },
  {
    id: 12,
    text: "Do you regularly review and update access permissions?",
    impact: "Regular access reviews prevent unauthorized access to systems",
    category: "Access Control"
  }
]

export default function BasicAssessment() {
  const [answers, setAnswers] = React.useState<{[key: number]: 'yes' | 'no'}>({})
  const [showResults, setShowResults] = React.useState(false)

  const handleAnswer = (id: number, value: 'yes' | 'no') => {
    setAnswers(prev => ({
      ...prev,
      [id]: value
    }))
  }

  const calculateScore = () => {
    const totalQuestions = basicQuestions.length
    const yesAnswers = Object.values(answers).filter(answer => answer === 'yes').length
    return Math.round((yesAnswers / totalQuestions) * 100)
  }

  const getRecommendations = (): Recommendation[] => {
    const recommendations: Recommendation[] = []

    basicQuestions.forEach(question => {
      if (answers[question.id] === 'no') {
        recommendations.push({
          category: question.category,
          recommendation: `Consider implementing: ${question.text.replace('Do you ', '')}`,
          impact: question.impact
        })
      }
    })

    // Group recommendations by category
    return recommendations.sort((a, b) => a.category.localeCompare(b.category))
  }

  const handleSubmit = () => {
    setShowResults(true)
  }

  const handleReset = () => {
    setAnswers({})
    setShowResults(false)
  }

  //const handlePrint = () => {
    //window.print()
  //}

  const currentDate = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })

  return (
    <Card className="w-full max-w-4xl mx-auto bg-white/50 dark:bg-slate-800/50 backdrop-blur">
      <CardHeader className="card-header">
        <CardTitle className="text-2xl font-bold text-center">
          Basic Security Assessment
        </CardTitle>
        <p className="text-center text-gray-600 dark:text-gray-300">
          Answer these questions to get a comprehensive overview of your security posture
        </p>
      </CardHeader>
      <CardContent className="card-content" data-date={currentDate}>
        {!showResults ? (
          <div className="space-y-6 no-print">
            {basicQuestions.map((q) => (
              <div key={q.id} className="p-4 border rounded-lg bg-white/50 dark:bg-slate-900/50">
                <div className="flex justify-between items-start mb-2">
                  <p className="font-medium flex-grow">{q.text}</p>
                  <span className="text-sm text-gray-500 dark:text-gray-400 ml-4">{q.category}</span>
                </div>
                <p className="text-sm text-gray-600 dark:text-gray-400 mb-4">{q.impact}</p>
                <div className="flex gap-4">
                  <Button 
                    variant={answers[q.id] === 'yes' ? 'default' : 'outline'}
                    onClick={() => handleAnswer(q.id, 'yes')}
                    className="w-24"
                  >
                    Yes
                  </Button>
                  <Button
                    variant={answers[q.id] === 'no' ? 'default' : 'outline'}
                    onClick={() => handleAnswer(q.id, 'no')}
                    className="w-24"
                  >
                    No
                  </Button>
                </div>
              </div>
            ))}
            <div className="flex justify-center mt-6">
              <Button
                onClick={handleSubmit}
                disabled={Object.keys(answers).length < basicQuestions.length}
                className="w-full md:w-auto"
              >
                View Results
              </Button>
            </div>
          </div>
        ) : (
          <div className="space-y-6">
            <div className="text-center">
              <h3 className="text-2xl font-bold mb-2">Security Assessment Results</h3>
              <div className="text-4xl font-bold text-primary mb-4">
                Security Score: {calculateScore()}%
              </div>
            </div>

            <div className="space-y-4">
              <h3 className="font-semibold text-xl mb-4">Security Recommendations</h3>
              {getRecommendations().map((rec, index) => (
                <div key={index} className="p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
                  <p className="font-medium text-blue-700 dark:text-blue-300">{rec.category}</p>
                  <p className="mt-1">{rec.recommendation}</p>
                  <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">{rec.impact}</p>
                </div>
              ))}
            </div>

            <div className="flex flex-wrap gap-4 justify-center mt-6 no-print">
              <Button onClick={handleReset} variant="outline">
                Start Over
              </Button>
            </div>

            <div className="mt-8 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg no-print">
              <h3 className="font-semibold mb-2">Want a More Detailed Assessment?</h3>
              <p className="text-sm text-gray-600 dark:text-gray-400">
                This basic assessment provides a quick overview of your security posture. 
                For a more comprehensive evaluation, try our advanced assessment or 
                schedule a consultation with our security experts.
              </p>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  )
}

================
File: app/risk_assessment/page.tsx
================
'use client';
import React from 'react'
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Shield, ArrowRight } from 'lucide-react'
import BasicAssessment from './basic'
import AdvancedAssessment from './advanced'
import Link from 'next/link'

export default function RiskAssessmentPage() {
  const [assessmentType, setAssessmentType] = React.useState('select')

  const renderAssessmentSelector = () => (
    <div className="container mx-auto px-4">
      <div className="grid gap-8 md:grid-cols-2 max-w-4xl mx-auto">
        <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all cursor-pointer"
          onClick={() => setAssessmentType('basic')}>
          <CardHeader>
            <div className="flex items-center gap-4">
              <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                <Shield className="h-8 w-8 text-primary" />
              </div>
              <CardTitle>Basic Assessment</CardTitle>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 dark:text-gray-300 mb-4">
              A quick evaluation of your basic security practices. Perfect for small businesses
              and individuals looking to understand their security posture.
            </p>
            <ul className="space-y-2 text-sm text-gray-600 dark:text-gray-400">
              <li>• 5-minute assessment</li>
              <li>• Basic security checklist</li>
              <li>• Instant recommendations</li>
              <li>• Printable report</li>
            </ul>
            <Button className="w-full mt-6 group">
              Start Basic Assessment
              <ArrowRight className="w-4 h-4 ml-2 transform group-hover:translate-x-1 transition-transform" />
            </Button>
          </CardContent>
        </Card>

        <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all cursor-pointer"
          onClick={() => setAssessmentType('advanced')}>
          <CardHeader>
            <div className="flex items-center gap-4">
              <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                <Shield className="h-8 w-8 text-primary" />
              </div>
              <CardTitle>Advanced Assessment</CardTitle>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 dark:text-gray-300 mb-4">
              A comprehensive evaluation of your security infrastructure. Ideal for businesses
              seeking detailed insights into their security measures.
            </p>
            <ul className="space-y-2 text-sm text-gray-600 dark:text-gray-400">
              <li>• 15-minute assessment</li>
              <li>• Detailed security analysis</li>
              <li>• Category-wise scoring</li>
              <li>• Comprehensive report</li>
            </ul>
            <Button className="w-full mt-6 group">
              Start Advanced Assessment
              <ArrowRight className="w-4 h-4 ml-2 transform group-hover:translate-x-1 transition-transform" />
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  )

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white dark:from-slate-950 dark:to-slate-900">
      {/* Hero Section */}
      <section className="relative py-20 overflow-hidden">
        <div className="container mx-auto px-4">
          <div className="text-center max-w-3xl mx-auto mb-16">
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-gray-50 mb-6">
              Security Risk Assessment
            </h1>
            <p className="text-xl text-gray-600 dark:text-gray-300">
              Evaluate your security posture and get personalized recommendations to enhance your cybersecurity
            </p>
          </div>

          {assessmentType === 'select' && renderAssessmentSelector()}
          
          {assessmentType !== 'select' && (
            <div className="assessment-container max-w-4xl mx-auto">
              <Button 
                variant="outline" 
                onClick={() => setAssessmentType('select')}
                className="mb-6 no-print"
              >
                Back to Selection
              </Button>
              {assessmentType === 'basic' && <BasicAssessment />}
              {assessmentType === 'advanced' && <AdvancedAssessment />}
            </div>
          )}
        </div>
      </section>

      {/* CTA Section */}
      {assessmentType !== 'select' && (
        <section className="py-16 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-slate-900/50 dark:to-slate-800/50">
          <div className="container mx-auto px-4">
            <div className="text-center space-y-6 max-w-2xl mx-auto">
              <h2 className="text-3xl font-semibold dark:text-gray-50">Need Professional Help?</h2>
              <p className="text-lg text-gray-600 dark:text-gray-300">
                Our team of security experts is ready to help you implement these recommendations
                and improve your security posture.
              </p>
              <Button asChild size="lg" className="group">
                <Link href="/contact" className="flex items-center">
                  Schedule Consultation
                  <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                </Link>
              </Button>
            </div>
          </div>
        </section>
      )}
    </div>
  )
}

================
File: app/services/page.tsx
================
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle, CardFooter } from "@/components/ui/card"
import { Shield, Clock, Users, ArrowRight } from "lucide-react"
import Link from "next/link"

const HeroBackground = () => (
  <svg className="absolute top-0 right-0 w-1/3 h-auto text-primary/5 dark:text-primary/10" viewBox="0 0 400 600">
    <path d="M75 10 L340 10 L340 180 C340 280 200 350 200 350 C200 350 60 280 60 180 L60 10 Z" 
          className="fill-current"
          strokeWidth="2"/>
    <g className="stroke-primary/10 dark:stroke-primary/20" strokeWidth="1">
      <path d="M100 100 H300 M200 100 V250" fill="none" />
      <path d="M150 150 H250 M200 150 V200" fill="none" />
      <path d="M120 200 H280" fill="none" />
      <circle cx="200" cy="100" r="4" className="fill-primary/20 dark:fill-primary/30" />
      <circle cx="200" cy="150" r="4" className="fill-primary/20 dark:fill-primary/30" />
      <circle cx="200" cy="200" r="4" className="fill-primary/20 dark:fill-primary/30" />
    </g>
  </svg>
);

export default function ServicesPage() {
  return (
    <div className="relative overflow-hidden bg-gradient-to-b from-blue-50 to-white dark:from-slate-950 dark:to-slate-900 min-h-screen">
      <HeroBackground />
      <div className="container mx-auto px-4 py-16 max-w-7xl">
        {/* Hero Section */}
        <div className="text-center mb-16 relative">
          <div className="absolute inset-0 -z-10">
            <svg className="w-full h-full opacity-10" viewBox="0 0 800 200">
              <path d="M0 100 C200 50 600 150 800 100" 
                    className="stroke-primary dark:stroke-primary/30" 
                    strokeWidth="2" 
                    strokeDasharray="8 4"
                    fill="none"/>
              <path d="M0 120 C200 70 600 170 800 120" 
                    className="stroke-primary dark:stroke-primary/30" 
                    strokeWidth="2"
                    strokeDasharray="8 4" 
                    fill="none"/>
            </svg>
          </div>
          <h1 className="text-4xl md:text-5xl font-bold mb-6 bg-clip-text text-transparent bg-gradient-to-r from-primary to-primary/80 dark:from-primary dark:to-primary/60">
            Our Services
          </h1>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            Comprehensive cybersecurity solutions tailored to your organization&apos;s needs
          </p>
        </div>

        {/* Main Services */}
        <div className="grid md:grid-cols-2 gap-8 max-w-5xl mx-auto mb-16">
          {/* vCISO Service */}
          <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all">
            <CardHeader>
              <div className="flex items-center gap-4 mb-4">
                <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                  <Users className="h-8 w-8 text-primary" />
                </div>
                <div>
                  <CardTitle className="text-2xl">Virtual CISO</CardTitle>
                  <p className="text-sm text-gray-500 dark:text-gray-400">Strategic Security Leadership</p>
                </div>
              </div>
              <p className="text-gray-600 dark:text-gray-300">
                Expert security leadership and guidance tailored to your organization&apos;s needs. From policy development to 
                risk management, we provide comprehensive security program oversight.
              </p>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex items-center gap-3">
                <Clock className="h-5 w-5 text-primary" />
                <span className="text-gray-600 dark:text-gray-300">Monthly security steering</span>
              </div>
              <div className="flex items-center gap-3">
                <Shield className="h-5 w-5 text-primary" />
                <span className="text-gray-600 dark:text-gray-300">Risk assessment & management</span>
              </div>
              <div className="flex items-center gap-3">
                <Users className="h-5 w-5 text-primary" />
                <span className="text-gray-600 dark:text-gray-300">Security program development</span>
              </div>
            </CardContent>
            <CardFooter>
              <Button className="w-full group" asChild>
                <Link href="/services/vciso" className="flex items-center justify-center">
                  Learn More About vCISO
                  <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                </Link>
              </Button>
            </CardFooter>
          </Card>

          {/* ATO Service */}
          <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all">
            <CardHeader>
              <div className="flex items-center gap-4 mb-4">
                <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                  <Shield className="h-8 w-8 text-primary" />
                </div>
                <div>
                  <CardTitle className="text-2xl">ATO as a Service</CardTitle>
                  <p className="text-sm text-gray-500 dark:text-gray-400">System Authorization & Compliance</p>
                </div>
              </div>
              <p className="text-gray-600 dark:text-gray-300">
                End-to-end management of your Authorization to Operate process. From initial assessment of your system to final 
                authorization, we handle the entire compliance journey.
              </p>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex items-center gap-3">
                <Clock className="h-5 w-5 text-primary" />
                <span className="text-gray-600 dark:text-gray-300">Accelerated compliance timeline</span>
              </div>
              <div className="flex items-center gap-3">
                <Shield className="h-5 w-5 text-primary" />
                <span className="text-gray-600 dark:text-gray-300">Complete system security</span>
              </div>
              <div className="flex items-center gap-3">
                <Users className="h-5 w-5 text-primary" />
                <span className="text-gray-600 dark:text-gray-300">Dedicated compliance team</span>
              </div>
            </CardContent>
            <CardFooter>
              <Button className="w-full group" asChild>
                <Link href="/services/atoaas" className="flex items-center justify-center">
                  Learn More About ATO
                  <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                </Link>
              </Button>
            </CardFooter>
          </Card>
        </div>

        {/* CTA Section */}
        <section className="py-16 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-slate-900/50 dark:to-slate-800/50 rounded-lg">
          <div className="container mx-auto px-4">
            <div className="text-center space-y-6 max-w-2xl mx-auto">
              <h2 className="text-3xl font-semibold dark:text-gray-50">Not Sure Which Service You Need?</h2>
              <p className="text-lg text-gray-600 dark:text-gray-300">
                Schedule a consultation with our team to discuss your security needs and find the perfect solution for your organization.
              </p>
              <Button size="lg" className="group" asChild>
                <Link href="/contact" className="flex items-center">
                  Schedule a Consultation
                  <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                </Link>
              </Button>
            </div>
          </div>
        </section>
      </div>
    </div>
  );
}

================
File: app/vciso/page.tsx
================
import React from 'react';
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import Link from "next/link"
import { Shield, Users, Clock, CheckCircle, ArrowRight, FileCheck, Lock } from 'lucide-react'

export default function vCISOPage() {
  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white dark:from-slate-950 dark:to-slate-900">
      {/* Hero Section */}
      <section className="relative py-20 overflow-hidden">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row items-center justify-between gap-12">
            <div className="flex flex-col text-left md:w-1/2">
              <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-gray-50 mb-6">
                Virtual CISO Services
              </h1>
              <p className="text-xl text-gray-600 dark:text-gray-300">
                Expert security leadership and guidance tailored to your organization&apos;s needs. Foxx Cyber vCISO is your business security partner in your pocket.
              </p>
            </div>
            
            {/* Security Leadership Illustration */}
            <div className="md:w-1/2 flex justify-center">
              <svg className="w-full max-w-lg h-auto" viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg">
                {/* Organization Circle */}
                <circle cx="200" cy="200" r="160" className="fill-primary/5 dark:fill-primary/10" />
                
                {/* Leadership Web Lines */}
                <g className="stroke-primary/30 dark:stroke-primary/40" fill="none" strokeWidth="2">
                  <path d="M200 100 L200 300" />
                  <path d="M100 200 L300 200" />
                  <path d="M130 130 L270 270" />
                  <path d="M130 270 L270 130" />
                </g>
                
                {/* Connection Points */}
                <g className="fill-primary dark:fill-primary/80">
                  <circle cx="200" cy="100" r="8" />
                  <circle cx="300" cy="200" r="8" />
                  <circle cx="200" cy="300" r="8" />
                  <circle cx="100" cy="200" r="8" />
                  <circle cx="200" cy="200" r="12" />
                </g>
              </svg>
            </div>
          </div>
        </div>
      </section>

      {/* Service Tiers */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12 dark:text-gray-50">Service Tiers</h2>
          <div className="grid gap-8 md:grid-cols-3 max-w-6xl mx-auto">
            {/* Foundation Tier */}
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all">
              <CardHeader>
                <div className="flex items-center gap-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Shield className="h-8 w-8 text-primary" />
                  </div>
                  <div>
                    <CardTitle>Foundation</CardTitle>
                    <p className="text-sm text-gray-500 dark:text-gray-400">For Small Businesses</p>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="mb-6">
                  <p className="text-3xl font-bold">$2,000<span className="text-lg font-normal text-gray-500">/month</span></p>
                </div>
                <ul className="space-y-3 text-gray-600 dark:text-gray-300">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Monthly security steering committee
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Basic security policy development
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Quarterly risk assessments
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Up to 10 hours monthly advisory
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Basic vendor security reviews
                  </li>
                </ul>
                <Button className="w-full mt-6 group" asChild>
                  <Link href="/contact" className="flex items-center justify-center">
                    Get Started
                    <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                  </Link>
                </Button>
              </CardContent>
            </Card>

            {/* Professional Tier */}
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all relative overflow-hidden">
              <div className="absolute top-3 right-3 bg-primary text-white text-sm py-1 px-3 rounded-full">
                Most Popular
              </div>
              <CardHeader>
                <div className="flex items-center gap-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Lock className="h-8 w-8 text-primary" />
                  </div>
                  <div>
                    <CardTitle>Professional</CardTitle>
                    <p className="text-sm text-gray-500 dark:text-gray-400">For Medium Businesses</p>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="mb-6">
                  <p className="text-3xl font-bold">$4,000<span className="text-lg font-normal text-gray-500">/month</span></p>
                </div>
                <ul className="space-y-3 text-gray-600 dark:text-gray-300">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Everything in Foundation, plus:
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Bi-weekly security meetings
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Comprehensive policy framework
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Monthly risk assessments
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Up to 20 hours monthly advisory
                  </li>
                </ul>
                <Button className="w-full mt-6 group" asChild>
                  <Link href="/contact" className="flex items-center justify-center">
                    Get Started
                    <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                  </Link>
                </Button>
              </CardContent>
            </Card>

            {/* Enterprise Tier */}
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur transform hover:scale-105 transition-all">
              <CardHeader>
                <div className="flex items-center gap-4">
                  <div className="p-3 rounded-xl bg-primary/10 dark:bg-primary/20">
                    <Users className="h-8 w-8 text-primary" />
                  </div>
                  <div>
                    <CardTitle>Enterprise</CardTitle>
                    <p className="text-sm text-gray-500 dark:text-gray-400">For Large Organizations</p>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="mb-6">
                  <p className="text-3xl font-bold">$8,000<span className="text-lg font-normal text-gray-500">/month</span></p>
                </div>
                <ul className="space-y-3 text-gray-600 dark:text-gray-300">
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Everything in Professional, plus:
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Weekly security meetings
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Board meeting participation
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Up to 40 hours monthly advisory
                  </li>
                  <li className="flex items-center gap-2">
                    <CheckCircle className="h-5 w-5 text-primary/70" />
                    Advanced security metrics program
                  </li>
                </ul>
                <Button className="w-full mt-6 group" asChild>
                  <Link href="/contact" className="flex items-center justify-center">
                    Get Started
                    <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
                  </Link>
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Features Grid */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12 dark:text-gray-50">Why Choose Our vCISO Services?</h2>
          <div className="grid gap-8 md:grid-cols-3 max-w-6xl mx-auto">
            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="pt-6">
                <Shield className="w-12 h-12 text-primary mb-4" />
                <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Expert Leadership</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Access to seasoned security professionals with CISSP and CISM certifications
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="pt-6">
                <Clock className="w-12 h-12 text-primary mb-4" />
                <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Flexible Engagement</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Scalable services that grow with your organization&apos;s needs
                </p>
              </CardContent>
            </Card>

            <Card className="bg-white/50 dark:bg-slate-800/50 backdrop-blur">
              <CardContent className="pt-6">
                <FileCheck className="w-12 h-12 text-primary mb-4" />
                <h3 className="text-xl font-semibold mb-2 dark:text-gray-100">Comprehensive Coverage</h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Full spectrum of security program management and strategic guidance
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-slate-900/50 dark:to-slate-800/50">
        <div className="container mx-auto px-4">
          <div className="text-center space-y-6 max-w-2xl mx-auto">
            <h2 className="text-3xl font-semibold dark:text-gray-50">Ready to Strengthen Your Security?</h2>
            <p className="text-lg text-gray-600 dark:text-gray-300">
              Contact us today to discuss how our vCISO services can help protect your organization
            </p>
            <Button size="lg" className="group" asChild>
              <Link href="/contact" className="flex items-center">
                Schedule a Consultation
                <ArrowRight className="ml-2 h-4 w-4 transform group-hover:translate-x-1 transition-transform" />
              </Link>
            </Button>
          </div>
        </div>
      </section>
    </div>
  )
}

================
File: components.json
================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "default",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "app/globals.css",
    "baseColor": "gray",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}

================
File: components/shared/Header.tsx
================
'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { Button } from '../ui/button';
import { ThemeToggle } from './theme-toggle';
import { Menu, X } from 'lucide-react';
import { useState } from 'react';

const navigation = [
  { name: 'Home', href: '/' },
  { name: 'About', href: '/about' },
  { name: 'Services', href: '/services' },
  { name: 'ATO', href: '/atoaas' },
  { name: 'vCISO', href: '/vciso' },
  { name: 'Risk Assessment', href: '/risk_assessment' },
  { name: 'Contact', href: '/contact' },
];

export function Header() {
  const pathname = usePathname();
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  return (
    <header className="sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div className="container flex h-16 items-center justify-between px-4 md:px-8">
        <div className="flex items-center space-x-2">
          <Link href="/" className="flex items-center space-x-2">
            <span className="font-bold text-xl text-foreground">Foxx Cyber</span>
          </Link>
        </div>

        {/* Desktop Navigation */}
        <nav className="hidden md:flex items-center space-x-4">
          {navigation.map((item) => (
            <Button
              key={item.href}
              variant={pathname === item.href ? 'default' : 'ghost'}
              asChild
            >
              <Link href={item.href}>{item.name}</Link>
            </Button>
          ))}
          <ThemeToggle />
        </nav>

        {/* Mobile Menu Button */}
        <div className="flex items-center space-x-2 md:hidden">
          <ThemeToggle />
          <Button
            variant="ghost"
            size="icon"
            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
            aria-label="Toggle menu"
          >
            {mobileMenuOpen ? (
              <X className="h-6 w-6" />
            ) : (
              <Menu className="h-6 w-6" />
            )}
          </Button>
        </div>
      </div>

      {/* Mobile Navigation */}
      {mobileMenuOpen && (
        <nav className="md:hidden border-t border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
          <div className="container px-4 py-3 space-y-1">
            {navigation.map((item) => (
              <Button
                key={item.href}
                variant={pathname === item.href ? 'default' : 'ghost'}
                className="w-full justify-start"
                onClick={() => setMobileMenuOpen(false)}
                asChild
              >
                <Link href={item.href}>{item.name}</Link>
              </Button>
            ))}
          </div>
        </nav>
      )}
    </header>
  );
}

================
File: components/shared/theme-provider.tsx
================
"use client"

import * as React from "react"
import { ThemeProvider as NextThemesProvider, type ThemeProviderProps } from "next-themes"

export function ThemeProvider({ children, ...props }: ThemeProviderProps) {
  return (
    <NextThemesProvider {...props}>
      {children}
    </NextThemesProvider>
  )
}

================
File: components/shared/theme-toggle.tsx
================
"use client"

import * as React from "react"
import { Moon, Sun } from "lucide-react"
import { useTheme } from "next-themes"
import { Button } from "@/components/ui/button"

export function ThemeToggle() {
  const { setTheme, theme } = useTheme()

  return (
    <Button
      variant="ghost"
      size="icon"
      onClick={() => setTheme(theme === "light" ? "dark" : "light")}
      className="relative"
    >
      <Sun className="h-5 w-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0" />
      <Moon className="absolute h-5 w-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100" />
      <span className="sr-only">Toggle theme</span>
    </Button>
  )
}

================
File: components/ui/button.tsx
================
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }

================
File: components/ui/card.tsx
================
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }

================
File: lib/logger.ts
================
import winston from 'winston';

const logger = winston.createLogger({
  level: process.env.LOG_LEVEL || 'info',
  format: winston.format.combine(
    winston.format.timestamp(),
    winston.format.errors({ stack: true }),
    winston.format.json()
  ),
  defaultMeta: { service: 'website' },
  transports: [
    // Write logs to console
    new winston.transports.Console({
      format: winston.format.combine(
        winston.format.colorize(),
        winston.format.printf(({ timestamp, level, message, ...meta }) => {
          return `${timestamp} [${level}]: ${message} ${
            Object.keys(meta).length ? JSON.stringify(meta, null, 2) : ''
          }`;
        })
      ),
    }),
    // Write logs to file in production
    ...(process.env.NODE_ENV === 'production' 
      ? [
          new winston.transports.File({ filename: 'logs/error.log', level: 'error' }),
          new winston.transports.File({ filename: 'logs/combined.log' })
        ] 
      : []
    )
  ],
});

export { logger };

================
File: lib/rate-limit.ts
================
import Redis from 'ioredis';
import { logger } from './logger';

interface RateLimitConfig {
  maxRequests: number;  // Maximum requests per window
  windowMs: number;     // Time window in milliseconds
}

interface RateLimitResult {
  success: boolean;
  remainingRequests: number;
  msBeforeNext: number;
}

class RateLimiter {
  private redis: Redis | null = null;
  private inMemoryStore: Map<string, { count: number; resetTime: number }>;
  private config: RateLimitConfig;

  constructor(config: RateLimitConfig) {
    this.config = config;
    this.inMemoryStore = new Map();

    // Initialize Redis if URL is provided
    if (process.env.REDIS_URL) {
      try {
        this.redis = new Redis(process.env.REDIS_URL);
        logger.info('Redis connection established for rate limiting');
      } catch (error) {
        logger.error('Failed to connect to Redis, falling back to in-memory store', { error });
      }
    } else {
      logger.info('No Redis URL provided, using in-memory rate limiting');
    }
  }

  private async checkRedis(key: string): Promise<RateLimitResult> {
    const now = Date.now();
    const windowStart = now - this.config.windowMs;
    
    try {
      const multi = this.redis!.multi();
      
      // Remove old requests
      multi.zremrangebyscore(key, 0, windowStart);
      // Count requests in current window
      multi.zcard(key);
      // Add current request
      multi.zadd(key, now.toString(), now.toString());
      // Set expiry on the key
      multi.pexpire(key, this.config.windowMs);

      const [, requestCount] = await multi.exec() as [[null, number], [null, number]];
      const count = requestCount[1];

      if (count > this.config.maxRequests) {
        const oldestRequest = await this.redis!.zrange(key, 0, 0, 'WITHSCORES');
        const resetTime = parseInt(oldestRequest[1]) + this.config.windowMs;
        
        return {
          success: false,
          remainingRequests: 0,
          msBeforeNext: resetTime - now
        };
      }

      return {
        success: true,
        remainingRequests: this.config.maxRequests - count,
        msBeforeNext: this.config.windowMs
      };
    } catch (error) {
      logger.error('Redis rate limit error', { error });
      // Fallback to in-memory on Redis error
      return this.checkInMemory(key);
    }
  }

  private checkInMemory(key: string): RateLimitResult {
    const now = Date.now();
    const record = this.inMemoryStore.get(key);

    if (!record) {
      this.inMemoryStore.set(key, {
        count: 1,
        resetTime: now + this.config.windowMs
      });
      
      return {
        success: true,
        remainingRequests: this.config.maxRequests - 1,
        msBeforeNext: this.config.windowMs
      };
    }

    if (now > record.resetTime) {
      record.count = 1;
      record.resetTime = now + this.config.windowMs;
      
      return {
        success: true,
        remainingRequests: this.config.maxRequests - 1,
        msBeforeNext: this.config.windowMs
      };
    }

    if (record.count >= this.config.maxRequests) {
      return {
        success: false,
        remainingRequests: 0,
        msBeforeNext: record.resetTime - now
      };
    }

    record.count += 1;
    return {
      success: true,
      remainingRequests: this.config.maxRequests - record.count,
      msBeforeNext: record.resetTime - now
    };
  }

  async checkLimit(identifier: string): Promise<RateLimitResult> {
    const key = `ratelimit:${identifier}`;
    
    if (this.redis) {
      return this.checkRedis(key);
    }
    
    return this.checkInMemory(key);
  }
}

// Create a singleton instance with default config
const limiter = new RateLimiter({
  maxRequests: 100,  // 100 requests
  windowMs: 60000    // per minute
});

// Export a simple function to check rate limits
export async function rateLimit(
  identifier: string
): Promise<RateLimitResult> {
  return limiter.checkLimit(identifier);
}

================
File: lib/utils.ts
================
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

================
File: next.config.mjs
================
/** @type {import('next').NextConfig} */
const nextConfig = {
  output: 'standalone',
  experimental: {
    serverActions: true,
  },
};

export default nextConfig;

================
File: package.json
================
{
  "name": "foxxcyber.com",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@radix-ui/react-slot": "^1.1.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "ioredis": "^5.4.2",
    "next": "14.2.16",
    "next-themes": "^0.4.3",
    "rate-limit": "^0.1.1",
    "react": "^18",
    "react-dom": "^18",
    "tailwind-merge": "^2.5.5",
    "tailwindcss-animate": "^1.0.7",
    "winston": "^3.17.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "eslint": "^8",
    "eslint-config-next": "14.2.16",
    "lucide-react": "^0.474.0",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
# FoxxCyber Web Application

## Docker Deployment Guide

This guide will help you deploy the FoxxCyber web application on your VPS using Docker.

### Prerequisites

- A VPS with Docker and Docker Compose installed
- Git installed on your VPS
- Domain name (optional but recommended)

### Installation Steps

1. Clone the repository:
```bash
git clone [your-repository-url]
cd foxxcyber.web
```

2. Set up environment variables:
```bash
cp .env.production.example .env.production
```
Edit `.env.production` with your actual values:
- Set `TWENTY_CRM_URL` to your Twenty CRM instance URL
- Set `TWENTY_API_KEY` to your Twenty CRM API key

3. Build and start the containers:
```bash
docker compose up -d
```

The application will be available at `http://your-server-ip:3001`

### Configuration

- The application runs on port 3001 by default (mapped from container port 3000)
- Redis is used for rate limiting and caching
- All data persists through Docker volumes

### Resource Usage

The Docker configuration includes resource limits:
- Web application: Max 1 CPU, 1GB RAM
- Redis: Max 0.5 CPU, 512MB RAM

### Health Checks

Both services include health checks:
- Web application: Checks `/api/health` endpoint every 30 seconds
- Redis: Performs PING command every 30 seconds

### Maintenance

To view logs:
```bash
docker compose logs -f
```

To update the application:
```bash
git pull
docker compose down
docker compose up -d --build
```

### Backup

Redis data is persisted in a Docker volume. To backup the data:
```bash
docker run --rm -v foxxcyber.web_redis_data:/data -v $(pwd)/backup:/backup alpine tar czf /backup/redis-backup.tar.gz /data
```

### Troubleshooting

If the application fails to start:
1. Check logs: `docker compose logs`
2. Verify environment variables in `.env.production`
3. Ensure all required ports are available
4. Check system resources

For more detailed logs:
```bash
docker compose logs -f --tail=100

================
File: tailwind.config.ts
================
import type { Config } from "tailwindcss";

const config: Config = {
    darkMode: ["class"],
    content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
  	extend: {
  		colors: {
  			background: 'hsl(var(--background))',
  			foreground: 'hsl(var(--foreground))',
  			card: {
  				DEFAULT: 'hsl(var(--card))',
  				foreground: 'hsl(var(--card-foreground))'
  			},
  			popover: {
  				DEFAULT: 'hsl(var(--popover))',
  				foreground: 'hsl(var(--popover-foreground))'
  			},
  			primary: {
  				DEFAULT: 'hsl(var(--primary))',
  				foreground: 'hsl(var(--primary-foreground))'
  			},
  			secondary: {
  				DEFAULT: 'hsl(var(--secondary))',
  				foreground: 'hsl(var(--secondary-foreground))'
  			},
  			muted: {
  				DEFAULT: 'hsl(var(--muted))',
  				foreground: 'hsl(var(--muted-foreground))'
  			},
  			accent: {
  				DEFAULT: 'hsl(var(--accent))',
  				foreground: 'hsl(var(--accent-foreground))'
  			},
  			destructive: {
  				DEFAULT: 'hsl(var(--destructive))',
  				foreground: 'hsl(var(--destructive-foreground))'
  			},
  			border: 'hsl(var(--border))',
  			input: 'hsl(var(--input))',
  			ring: 'hsl(var(--ring))',
  			chart: {
  				'1': 'hsl(var(--chart-1))',
  				'2': 'hsl(var(--chart-2))',
  				'3': 'hsl(var(--chart-3))',
  				'4': 'hsl(var(--chart-4))',
  				'5': 'hsl(var(--chart-5))'
  			}
  		},
  		borderRadius: {
  			lg: 'var(--radius)',
  			md: 'calc(var(--radius) - 2px)',
  			sm: 'calc(var(--radius) - 4px)'
  		}
  	}
  },
  plugins: [require("tailwindcss-animate")],
};
export default config;

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

================
File: types/next-themes.d.ts
================
declare module 'next-themes' {
  export interface ThemeProviderProps {
    children: React.ReactNode;
    attribute?: string;
    defaultTheme?: string;
    enableSystem?: boolean;
    disableTransitionOnChange?: boolean;
  }

  export function ThemeProvider(props: ThemeProviderProps): JSX.Element;
  
  export function useTheme(): {
    theme: string | undefined;
    setTheme: (theme: string) => void;
    systemTheme?: string;
  };
}



================================================================
End of Codebase
================================================================
